{"name":"uxcore-uploader","tagline":"UX Core Uploader","body":"### Quick Start\r\n\r\n**引入资源**\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"path/to/jquery.js\" />\r\n<script type=\"text/javascript\" src=\"path/to/uxuploader.js\" />\r\n```\r\n\r\n**创建对象**\r\n\r\n```javascript\r\nimport Uploader, {Events, Status} from 'uxuploader';\r\nvar up = new Uploader({\r\n    request: {\r\n        name: 'file',\r\n        url: 'http://test.yanbingbing.com/upload.php',\r\n        params: {},\r\n        headers: null,\r\n        withCredentials: false,\r\n        timeout: 0,\r\n        chunkEnable: false\r\n    },\r\n    processThreads: 3,\r\n    autoPending: true,\r\n    queueCapcity: 0,\r\n    multiple: true,\r\n    accept: null,\r\n    sizeLimit: 0,\r\n    preventDuplicate: false\r\n});\r\n```\r\n\r\n**事件监听**\r\n\r\n```javascript\r\n// 队列错误\r\nup.on(Events.QUEUE_ERROR, (error) => {\r\n    console.info('queueerror', error)\r\n})\r\n// 队列添加\r\n.on(Events.QUEUE_ADD, (file) => {\r\n    console.info('queueadd', file)\r\n})\r\n// 队列上传开始\r\n.on(Events.QUEUE_UPLOAD_START, () => {\r\n   console.info('queueuploadstart');\r\n})\r\n// 队列上传结束\r\n.on(Events.QUEUE_UPLOAD_END, () => {\r\n    console.info('queueuploadend');\r\n})\r\n// 队列统计变化\r\n.on(Events.QUEUE_STAT_CHANGE, (stat) => {\r\n    console.info('statchange', stat.stat());\r\n})\r\n// 文件上传开始\r\n.on(Events.FILE_UPLOAD_START, (file) => {\r\n    console.info('fileuploadstart', file);\r\n})\r\n// 文件上传准备中\r\n.on(Events.FILE_UPLOAD_PREPARING, (request) => {\r\n    console.info('fileuploadpreparing', request);\r\n})\r\n// 文件上传准备完毕\r\n.on(Events.FILE_UPLOAD_PREPARED, (file) => {\r\n    console.info('fileuploadprepared', file);\r\n})\r\n// 文件块上传准备中\r\n.on(Events.CHUNK_UPLOAD_PREPARING, (request) => {\r\n    console.info('chunkuploadpreparing', request);\r\n})\r\n// 文件块上传完成中\r\n.on(Events.CHUNK_UPLOAD_COMPLETING, (response) => {\r\n    console.info('chunkuploadcompleting', response);\r\n})\r\n// 文件上传进度\r\n.on(Events.FILE_UPLOAD_PROGRESS, (file, progress) => {\r\n    console.info('fileuploadprogress', file, progress);\r\n})\r\n// 文件上传结束\r\n.on(Events.FILE_UPLOAD_END, (file) => {\r\n    console.info('fileuploadend', file);\r\n})\r\n// 文件上传完成中\r\n.on(Events.FILE_UPLOAD_COMPLETING, (response) => {\r\n    console.info('fileuploadcompleting', response);\r\n})\r\n// 文件上传成功\r\n.on(Events.FILE_UPLOAD_SUCCESS, (file) => {\r\n    console.info('fileuploadsuccess', file);\r\n})\r\n// 文件上传错误\r\n.on(Events.FILE_UPLOAD_ERROR, (file) => {\r\n    console.info('fileuploaderror', file);\r\n})\r\n// 文件上传完成\r\n.on(Events.FILE_UPLOAD_COMPLETED, (file) => {\r\n    console.info('fileuploadcompleted', file);\r\n})\r\n// 文件取消\r\n.on(Events.FILE_CANCEL, (file) => {\r\n    console.info('filecancel', file);\r\n})\r\n// 文件状态变化\r\n.on(Events.FILE_STATUS_CHANGE, (file) => {\r\n    console.info('filestatuschange', file, file.getStatusName());\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}